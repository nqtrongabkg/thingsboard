import { Directive, Input, } from '@angular/core';
import * as i0 from "@angular/core";
// TODO: ssr problem should not hide on ssr
// TODO: show number change should recalculate is show and init show number
export class NgxHmCarouselDynamicDirective {
    constructor(_view, _template) {
        this._view = _view;
        this._template = _template;
        this.show = 1;
        this.completed = false;
        this._view.clear();
    }
    set currentI(value) {
        if (!this.completed) {
            const nextI = value + this.show;
            const prevI = value - this.show;
            if (this.index === 0 ||
                this.index === this.length - 1 ||
                this.index === nextI ||
                this.index === prevI ||
                this.index === value) {
                this._view.createEmbeddedView(this._template);
                this.completed = true;
            }
        }
    }
    ngOnInit() { }
}
NgxHmCarouselDynamicDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.0.1", ngImport: i0, type: NgxHmCarouselDynamicDirective, deps: [{ token: i0.ViewContainerRef }, { token: i0.TemplateRef }], target: i0.ɵɵFactoryTarget.Directive });
NgxHmCarouselDynamicDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "13.0.1", type: NgxHmCarouselDynamicDirective, selector: "[ngxHmCarouselDynamic]", inputs: { index: ["ngxHmCarouselDynamic", "index"], length: ["ngxHmCarouselDynamicLength", "length"], show: ["ngxHmCarouselDynamicShow", "show"], currentI: ["ngxHmCarouselDynamicIndex", "currentI"] }, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.0.1", ngImport: i0, type: NgxHmCarouselDynamicDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[ngxHmCarouselDynamic]',
                }]
        }], ctorParameters: function () { return [{ type: i0.ViewContainerRef }, { type: i0.TemplateRef }]; }, propDecorators: { index: [{
                type: Input,
                args: ['ngxHmCarouselDynamic']
            }], length: [{
                type: Input,
                args: ['ngxHmCarouselDynamicLength']
            }], show: [{
                type: Input,
                args: ['ngxHmCarouselDynamicShow']
            }], currentI: [{
                type: Input,
                args: ['ngxHmCarouselDynamicIndex']
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmd4LWhtLWNhcm91c2VsLWR5bmFtaWMuZGlyZWN0aXZlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vcHJvamVjdHMvbmd4LWhtLWNhcm91c2VsL3NyYy9saWIvbmd4LWhtLWNhcm91c2VsLWR5bmFtaWMuZGlyZWN0aXZlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFDTCxTQUFTLEVBQ1QsS0FBSyxHQUlOLE1BQU0sZUFBZSxDQUFDOztBQUV2QiwyQ0FBMkM7QUFDM0MsMkVBQTJFO0FBSTNFLE1BQU0sT0FBTyw2QkFBNkI7SUF3QnhDLFlBQ1UsS0FBdUIsRUFDdkIsU0FBMkI7UUFEM0IsVUFBSyxHQUFMLEtBQUssQ0FBa0I7UUFDdkIsY0FBUyxHQUFULFNBQVMsQ0FBa0I7UUF2QkYsU0FBSSxHQUFHLENBQUMsQ0FBQztRQW1CcEMsY0FBUyxHQUFHLEtBQUssQ0FBQztRQU14QixJQUFJLENBQUMsS0FBSyxDQUFDLEtBQUssRUFBRSxDQUFDO0lBQ3JCLENBQUM7SUF6QkQsSUFDSSxRQUFRLENBQUMsS0FBYTtRQUN4QixJQUFJLENBQUMsSUFBSSxDQUFDLFNBQVMsRUFBRTtZQUNuQixNQUFNLEtBQUssR0FBRyxLQUFLLEdBQUcsSUFBSSxDQUFDLElBQUksQ0FBQztZQUNoQyxNQUFNLEtBQUssR0FBRyxLQUFLLEdBQUcsSUFBSSxDQUFDLElBQUksQ0FBQztZQUNoQyxJQUNFLElBQUksQ0FBQyxLQUFLLEtBQUssQ0FBQztnQkFDaEIsSUFBSSxDQUFDLEtBQUssS0FBSyxJQUFJLENBQUMsTUFBTSxHQUFHLENBQUM7Z0JBQzlCLElBQUksQ0FBQyxLQUFLLEtBQUssS0FBSztnQkFDcEIsSUFBSSxDQUFDLEtBQUssS0FBSyxLQUFLO2dCQUNwQixJQUFJLENBQUMsS0FBSyxLQUFLLEtBQUssRUFDcEI7Z0JBQ0EsSUFBSSxDQUFDLEtBQUssQ0FBQyxrQkFBa0IsQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLENBQUM7Z0JBQzlDLElBQUksQ0FBQyxTQUFTLEdBQUcsSUFBSSxDQUFDO2FBQ3ZCO1NBQ0Y7SUFDSCxDQUFDO0lBV0QsUUFBUSxLQUFVLENBQUM7OzBIQS9CUiw2QkFBNkI7OEdBQTdCLDZCQUE2QjsyRkFBN0IsNkJBQTZCO2tCQUh6QyxTQUFTO21CQUFDO29CQUNULFFBQVEsRUFBRSx3QkFBd0I7aUJBQ25DO2lJQUVnQyxLQUFLO3NCQUFuQyxLQUFLO3VCQUFDLHNCQUFzQjtnQkFDUSxNQUFNO3NCQUExQyxLQUFLO3VCQUFDLDRCQUE0QjtnQkFDQSxJQUFJO3NCQUF0QyxLQUFLO3VCQUFDLDBCQUEwQjtnQkFFN0IsUUFBUTtzQkFEWCxLQUFLO3VCQUFDLDJCQUEyQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XG4gIERpcmVjdGl2ZSxcbiAgSW5wdXQsXG4gIE9uSW5pdCxcbiAgVGVtcGxhdGVSZWYsXG4gIFZpZXdDb250YWluZXJSZWYsXG59IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG4vLyBUT0RPOiBzc3IgcHJvYmxlbSBzaG91bGQgbm90IGhpZGUgb24gc3NyXG4vLyBUT0RPOiBzaG93IG51bWJlciBjaGFuZ2Ugc2hvdWxkIHJlY2FsY3VsYXRlIGlzIHNob3cgYW5kIGluaXQgc2hvdyBudW1iZXJcbkBEaXJlY3RpdmUoe1xuICBzZWxlY3RvcjogJ1tuZ3hIbUNhcm91c2VsRHluYW1pY10nLFxufSlcbmV4cG9ydCBjbGFzcyBOZ3hIbUNhcm91c2VsRHluYW1pY0RpcmVjdGl2ZSBpbXBsZW1lbnRzIE9uSW5pdCB7XG4gIEBJbnB1dCgnbmd4SG1DYXJvdXNlbER5bmFtaWMnKSBpbmRleDogbnVtYmVyO1xuICBASW5wdXQoJ25neEhtQ2Fyb3VzZWxEeW5hbWljTGVuZ3RoJykgbGVuZ3RoOiBudW1iZXI7XG4gIEBJbnB1dCgnbmd4SG1DYXJvdXNlbER5bmFtaWNTaG93Jykgc2hvdyA9IDE7XG4gIEBJbnB1dCgnbmd4SG1DYXJvdXNlbER5bmFtaWNJbmRleCcpXG4gIHNldCBjdXJyZW50SSh2YWx1ZTogbnVtYmVyKSB7XG4gICAgaWYgKCF0aGlzLmNvbXBsZXRlZCkge1xuICAgICAgY29uc3QgbmV4dEkgPSB2YWx1ZSArIHRoaXMuc2hvdztcbiAgICAgIGNvbnN0IHByZXZJID0gdmFsdWUgLSB0aGlzLnNob3c7XG4gICAgICBpZiAoXG4gICAgICAgIHRoaXMuaW5kZXggPT09IDAgfHxcbiAgICAgICAgdGhpcy5pbmRleCA9PT0gdGhpcy5sZW5ndGggLSAxIHx8XG4gICAgICAgIHRoaXMuaW5kZXggPT09IG5leHRJIHx8XG4gICAgICAgIHRoaXMuaW5kZXggPT09IHByZXZJIHx8XG4gICAgICAgIHRoaXMuaW5kZXggPT09IHZhbHVlXG4gICAgICApIHtcbiAgICAgICAgdGhpcy5fdmlldy5jcmVhdGVFbWJlZGRlZFZpZXcodGhpcy5fdGVtcGxhdGUpO1xuICAgICAgICB0aGlzLmNvbXBsZXRlZCA9IHRydWU7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgcHJpdmF0ZSBjb21wbGV0ZWQgPSBmYWxzZTtcblxuICBjb25zdHJ1Y3RvcihcbiAgICBwcml2YXRlIF92aWV3OiBWaWV3Q29udGFpbmVyUmVmLFxuICAgIHByaXZhdGUgX3RlbXBsYXRlOiBUZW1wbGF0ZVJlZjxhbnk+LFxuICApIHtcbiAgICB0aGlzLl92aWV3LmNsZWFyKCk7XG4gIH1cblxuICBuZ09uSW5pdCgpOiB2b2lkIHt9XG59XG4iXX0=
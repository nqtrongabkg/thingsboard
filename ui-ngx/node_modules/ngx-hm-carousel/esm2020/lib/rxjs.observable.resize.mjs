import { Observable } from 'rxjs';
import { debounceTime, tap, finalize } from 'rxjs/operators';
/**
 * An observable creator for element resize.
 * @param elm the watch element.
 * @param cb when resize complete, call back function.
 * @param time resize emit time, default is 200
 */
export function resizeObservable(elm, cb, time = 200) {
    let elmObserve$;
    return new Observable((observer) => {
        elmObserve$ = new ResizeObserver((entries, obs) => {
            observer.next(elmObserve$);
        });
        elmObserve$.observe(elm);
    }).pipe(debounceTime(time), tap(() => {
        cb();
    }), finalize(() => {
        elmObserve$.unobserve(elm);
        elmObserve$.disconnect();
    }));
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicnhqcy5vYnNlcnZhYmxlLnJlc2l6ZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3Byb2plY3RzL25neC1obS1jYXJvdXNlbC9zcmMvbGliL3J4anMub2JzZXJ2YWJsZS5yZXNpemUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFVBQVUsRUFBYyxNQUFNLE1BQU0sQ0FBQztBQUM5QyxPQUFPLEVBQUUsWUFBWSxFQUFFLEdBQUcsRUFBRSxRQUFRLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQUU3RDs7Ozs7R0FLRztBQUNILE1BQU0sVUFBVSxnQkFBZ0IsQ0FDOUIsR0FBZ0IsRUFDaEIsRUFBYyxFQUNkLElBQUksR0FBRyxHQUFHO0lBRVYsSUFBSSxXQUEyQixDQUFDO0lBQ2hDLE9BQU8sSUFBSSxVQUFVLENBQUMsQ0FBQyxRQUF5QixFQUFFLEVBQUU7UUFDbEQsV0FBVyxHQUFHLElBQUksY0FBYyxDQUFDLENBQUMsT0FBTyxFQUFFLEdBQUcsRUFBRSxFQUFFO1lBQ2hELFFBQVEsQ0FBQyxJQUFJLENBQUMsV0FBVyxDQUFDLENBQUM7UUFDN0IsQ0FBQyxDQUFDLENBQUM7UUFDSCxXQUFXLENBQUMsT0FBTyxDQUFDLEdBQUcsQ0FBQyxDQUFDO0lBQzNCLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FDTCxZQUFZLENBQUMsSUFBSSxDQUFDLEVBQ2xCLEdBQUcsQ0FBQyxHQUFHLEVBQUU7UUFDUCxFQUFFLEVBQUUsQ0FBQztJQUNQLENBQUMsQ0FBQyxFQUNGLFFBQVEsQ0FBQyxHQUFHLEVBQUU7UUFDWixXQUFXLENBQUMsU0FBUyxDQUFDLEdBQUcsQ0FBQyxDQUFDO1FBQzNCLFdBQVcsQ0FBQyxVQUFVLEVBQUUsQ0FBQztJQUMzQixDQUFDLENBQUMsQ0FDSCxDQUFDO0FBQ0osQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE9ic2VydmFibGUsIFN1YnNjcmliZXIgfSBmcm9tICdyeGpzJztcbmltcG9ydCB7IGRlYm91bmNlVGltZSwgdGFwLCBmaW5hbGl6ZSB9IGZyb20gJ3J4anMvb3BlcmF0b3JzJztcblxuLyoqXG4gKiBBbiBvYnNlcnZhYmxlIGNyZWF0b3IgZm9yIGVsZW1lbnQgcmVzaXplLlxuICogQHBhcmFtIGVsbSB0aGUgd2F0Y2ggZWxlbWVudC5cbiAqIEBwYXJhbSBjYiB3aGVuIHJlc2l6ZSBjb21wbGV0ZSwgY2FsbCBiYWNrIGZ1bmN0aW9uLlxuICogQHBhcmFtIHRpbWUgcmVzaXplIGVtaXQgdGltZSwgZGVmYXVsdCBpcyAyMDBcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHJlc2l6ZU9ic2VydmFibGUoXG4gIGVsbTogSFRNTEVsZW1lbnQsXG4gIGNiOiAoKSA9PiB2b2lkLFxuICB0aW1lID0gMjAwXG4pOiBPYnNlcnZhYmxlPGFueT4ge1xuICBsZXQgZWxtT2JzZXJ2ZSQ6IFJlc2l6ZU9ic2VydmVyO1xuICByZXR1cm4gbmV3IE9ic2VydmFibGUoKG9ic2VydmVyOiBTdWJzY3JpYmVyPGFueT4pID0+IHtcbiAgICBlbG1PYnNlcnZlJCA9IG5ldyBSZXNpemVPYnNlcnZlcigoZW50cmllcywgb2JzKSA9PiB7XG4gICAgICBvYnNlcnZlci5uZXh0KGVsbU9ic2VydmUkKTtcbiAgICB9KTtcbiAgICBlbG1PYnNlcnZlJC5vYnNlcnZlKGVsbSk7XG4gIH0pLnBpcGUoXG4gICAgZGVib3VuY2VUaW1lKHRpbWUpLFxuICAgIHRhcCgoKSA9PiB7XG4gICAgICBjYigpO1xuICAgIH0pLFxuICAgIGZpbmFsaXplKCgpID0+IHtcbiAgICAgIGVsbU9ic2VydmUkLnVub2JzZXJ2ZShlbG0pO1xuICAgICAgZWxtT2JzZXJ2ZSQuZGlzY29ubmVjdCgpO1xuICAgIH0pXG4gICk7XG59XG4iXX0=
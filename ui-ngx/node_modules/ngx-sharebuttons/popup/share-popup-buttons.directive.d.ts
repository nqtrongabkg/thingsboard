import { EventEmitter, OnDestroy } from '@angular/core';
import { SharePopupService } from './share-popup.service';
import { ShareService } from 'ngx-sharebuttons';
import * as i0 from "@angular/core";
export declare class SharePopupButtonsDirective implements OnDestroy {
    private _sharePopup;
    private _share;
    theme: string;
    include: string[];
    exclude: string[];
    closeIcon: string | string[];
    /** The sharing link */
    url: string;
    /** The title parameter */
    title: string;
    /** The description parameter */
    description: string;
    /** The image parameter for sharing on Pinterest */
    image: string;
    /** The tags parameter for sharing on Twitter and Tumblr */
    tags: string;
    /** Sets meta tags from document head, useful when SEO is available */
    autoSetMeta: boolean;
    show: number;
    /** Show buttons icons */
    showIcon: boolean;
    /** Show buttons text */
    showText: boolean;
    /** A flag that indicates if the button's click is disabled */
    disabled: boolean;
    hasBackdrop: boolean;
    backdropClass: string;
    /** Share dialog opened event */
    opened: EventEmitter<string>;
    /** Share dialog closed event */
    closed: EventEmitter<string>;
    popupClosed: EventEmitter<void>;
    private _popupClosed;
    constructor(_sharePopup: SharePopupService, _share: ShareService);
    onClick(e: any): void;
    ngOnDestroy(): void;
    close(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<SharePopupButtonsDirective, never>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<SharePopupButtonsDirective, "[shareButtonsPopup]", never, { "theme": "theme"; "include": "include"; "exclude": "exclude"; "closeIcon": "closeIcon"; "url": "url"; "title": "title"; "description": "description"; "image": "image"; "tags": "tags"; "autoSetMeta": "autoSetMeta"; "show": "show"; "showIcon": "showIcon"; "showText": "showText"; "disabled": "disabled"; "hasBackdrop": "hasBackdrop"; "backdropClass": "backdropClass"; }, { "opened": "opened"; "closed": "closed"; "popupClosed": "popupClosed"; }, never, never, false, never>;
}

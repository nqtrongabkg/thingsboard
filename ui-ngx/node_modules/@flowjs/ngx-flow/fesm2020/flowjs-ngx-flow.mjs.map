{"version":3,"file":"flowjs-ngx-flow.mjs","sources":["../../../projects/ngx-flow/src/lib/button.directive.ts","../../../projects/ngx-flow/src/lib/drop.directive.ts","../../../projects/ngx-flow/src/lib/src.directive.ts","../../../projects/ngx-flow/src/lib/flow-injection-token.ts","../../../projects/ngx-flow/src/lib/helpers/flow-file-to-transfer.ts","../../../projects/ngx-flow/src/lib/flow.directive.ts","../../../projects/ngx-flow/src/lib/ngx-flow.module.ts","../../../projects/ngx-flow/src/public-api.ts","../../../projects/ngx-flow/src/flowjs-ngx-flow.ts"],"sourcesContent":["import { Directive, ElementRef, Input } from '@angular/core';\n\n@Directive({\n  selector: '[flowButton]',\n})\nexport class ButtonDirective {\n  protected _directoryOnly = false;\n  @Input()\n  set flowDirectoryOnly(directoriesOnly: boolean) {\n    this._directoryOnly = directoriesOnly;\n    this.setup();\n  }\n\n  protected _attributes?: object;\n  @Input()\n  set flowAttributes(attributes: object) {\n    this._attributes = attributes;\n    this.setup();\n  }\n\n  protected _flow?: flowjs.Flow;\n  @Input()\n  set flow(flow: flowjs.Flow) {\n    this._flow = flow;\n    this.setup();\n  }\n\n  setup() {\n    if (!this._flow) {\n      return;\n    }\n    this._flow.assignBrowse(\n      this.el.nativeElement,\n      this._directoryOnly,\n      this._flow.opts.singleFile,\n      this._attributes\n    );\n  }\n\n  constructor(protected el: ElementRef) {}\n}\n","import { Directive, Input, ElementRef, Renderer2, OnInit } from '@angular/core';\n\n@Directive({\n  selector: '[flowDrop]',\n  exportAs: 'flowDrop',\n})\nexport class DropDirective implements OnInit {\n  protected flowJs?: flowjs.Flow;\n\n  @Input()\n  set flow(flow: flowjs.Flow) {\n    this.flowJs = flow;\n    if (!flow) {\n      return;\n    }\n    this.enable();\n  }\n\n  enable() {\n    this.flowJs?.assignDrop(this.el.nativeElement);\n  }\n\n  disable() {\n    this.flowJs?.unAssignDrop(this.el.nativeElement);\n  }\n\n  constructor(protected el: ElementRef, protected renderer: Renderer2) {}\n\n  ngOnInit() {\n    this.renderer.listen('body', 'drop', (event) => event.preventDefault());\n    this.renderer.listen('body', 'dragover', (event) => event.preventDefault());\n  }\n}\n","import { Directive, ElementRef, Input } from '@angular/core';\nimport { Transfer } from './transfer';\n\n@Directive({\n  selector: '[flowSrc]'\n})\nexport class SrcDirective {\n  protected fileReader = new FileReader();\n\n  @Input()\n  set flowSrc(transfer: Transfer) {\n    this.fileReader.readAsDataURL(transfer.flowFile.file);\n    this.fileReader.onload = (event: any) => {\n      const url = event.target.result;\n      this.el.nativeElement.setAttribute('src', url);\n    };\n  }\n\n  constructor(private el: ElementRef) {}\n}\n","import { InjectionToken } from '@angular/core';\nimport { FlowConstructor } from './flow-constructor';\n\nexport const FlowInjectionToken = new InjectionToken<FlowConstructor>('Flow');\n","import { Transfer } from '../transfer';\n\nexport function flowFile2Transfer(flowFile: flowjs.FlowFile): Transfer {\n  return {\n    id: flowFile.uniqueIdentifier,\n    name: flowFile.name,\n    progress: flowFile.progress(),\n    averageSpeed: flowFile.averageSpeed,\n    currentSpeed: flowFile.currentSpeed,\n    size: flowFile.size,\n    paused: flowFile.paused,\n    error: flowFile.error,\n    complete: flowFile.isComplete(),\n    success: flowFile.isComplete() && !flowFile.error,\n    timeRemaining: flowFile.timeRemaining(),\n    flowFile\n  };\n}\n","import { Directive, Inject, Input, PLATFORM_ID } from '@angular/core';\nimport { fromEvent, merge, Observable, ReplaySubject, Subject } from 'rxjs';\nimport { map, shareReplay, startWith, switchMap } from 'rxjs/operators';\nimport { FlowInjectionToken } from './flow-injection-token';\nimport { flowFile2Transfer } from './helpers/flow-file-to-transfer';\nimport { Transfer } from './transfer';\nimport { UploadState } from './upload-state';\nimport { isPlatformBrowser } from '@angular/common';\nimport { FlowConstructor } from './flow-constructor';\nimport { JQueryStyleEventEmitter } from 'rxjs/internal/observable/fromEvent';\n\nexport interface FlowChangeEvent<T extends flowjs.EventName> {\n  type: T;\n  event: flowjs.FlowEventFromEventName<T>;\n}\n\nexport interface NgxFlowEvent {\n  type: 'pauseOrResume' | 'newFlowJsInstance';\n}\n\n@Directive({\n  selector: '[flowConfig]',\n  exportAs: 'flow',\n})\nexport class FlowDirective {\n  @Input()\n  set flowConfig(options: flowjs.FlowOptions) {\n    if (isPlatformBrowser(this.platform)) {\n      this.flowJs = new this.flowConstructor(options);\n      this.flow$.next(this.flowJs);\n    }\n  }\n\n  flowJs!: flowjs.Flow;\n\n  protected flow$ = new ReplaySubject<flowjs.Flow>(1);\n\n  pauseOrResumeEvent$ = new Subject<void>();\n\n  events$ = this.flow$.pipe(\n    switchMap((flow) => merge(this.flowEvents(flow), this.ngxFlowEvents()))\n  );\n\n  transfers$: Observable<UploadState> = this.events$.pipe(\n    map((_) => this.flowJs.files),\n    map((files: flowjs.FlowFile[] = []) => ({\n      transfers: files.map((flowFile) => flowFile2Transfer(flowFile)),\n      flow: this.flowJs,\n      totalProgress: this.flowJs.progress(),\n    })),\n    shareReplay(1)\n  );\n\n  somethingToUpload$ = this.transfers$.pipe(\n    map(\n      (state) => state.transfers.some((file) => !file.success),\n      startWith(false)\n    )\n  );\n\n  constructor(\n    @Inject(FlowInjectionToken) protected flowConstructor: FlowConstructor,\n    @Inject(PLATFORM_ID) protected platform: any\n  ) {}\n\n  private flowEvents(\n    flow: flowjs.Flow\n  ): Observable<FlowChangeEvent<flowjs.EventName>> {\n    const events = [\n      this.listenForEvent(flow, 'fileSuccess'),\n      this.listenForEvent(flow, 'fileProgress'),\n      this.listenForEvent(flow, 'fileAdded'),\n      this.listenForEvent(flow, 'filesAdded'),\n      this.listenForEvent(flow, 'filesSubmitted'),\n      this.listenForEvent(flow, 'fileRemoved'),\n      this.listenForEvent(flow, 'fileRetry'),\n      this.listenForEvent(flow, 'fileError'),\n      this.listenForEvent(flow, 'uploadStart'),\n      this.listenForEvent(flow, 'complete'),\n      this.listenForEvent(flow, 'progress'),\n    ];\n    return merge(...events);\n  }\n\n  private ngxFlowEvents(): Observable<NgxFlowEvent> {\n    const pauseOrResumeEvent$ = this.pauseOrResumeEvent$.pipe(\n      map(\n        (_) =>\n          ({\n            type: 'pauseOrResume',\n          } as NgxFlowEvent)\n      )\n    );\n    const newFlowInstanceEvent$ = this.flow$.pipe(\n      map(\n        (_) =>\n          ({\n            type: 'newFlowJsInstance',\n          } as NgxFlowEvent)\n      )\n    );\n    const events = [pauseOrResumeEvent$, newFlowInstanceEvent$];\n    return merge(...events);\n  }\n\n  upload(): void {\n    this.flowJs.upload();\n  }\n\n  cancel(): void {\n    this.flowJs.cancel();\n  }\n\n  cancelFile(file: Transfer): void {\n    file.flowFile.cancel();\n  }\n\n  pauseFile(file: Transfer): void {\n    file.flowFile.pause();\n    this.pauseOrResumeEvent$.next();\n  }\n\n  resumeFile(file: Transfer): void {\n    file.flowFile.resume();\n    this.pauseOrResumeEvent$.next();\n  }\n\n  protected listenForEvent<T extends flowjs.EventName, R extends flowjs.FlowEventFromEventName<T>>(\n    flow: flowjs.Flow,\n    eventName: T\n  ): Observable<{ type: T; event: R }> {\n    return fromEvent<R>(\n      flow as JQueryStyleEventEmitter<any, R>,\n      eventName\n    ).pipe(\n      map((args) => ({\n        type: eventName,\n        event: args,\n      }))\n    );\n  }\n}\n","import { NgModule } from '@angular/core';\n// import Flow from '@flowjs/flow.js';\nimport { ButtonDirective } from './button.directive';\nimport { DropDirective } from './drop.directive';\nimport { FlowInjectionToken } from './flow-injection-token';\nimport { FlowDirective } from './flow.directive';\nimport { SrcDirective } from './src.directive';\n\nconst directives = [\n  ButtonDirective,\n  SrcDirective,\n  DropDirective,\n  FlowDirective,\n];\n// export function flowFactory() {\n//   return Flow;\n// }\n\n@NgModule({\n  imports: [],\n  declarations: directives,\n  // providers: [\n  //   {\n  //     provide: FlowInjectionToken,\n  //     useFactory: flowFactory\n  //   }\n  // ],\n  exports: directives,\n})\nexport class NgxFlowModule {}\n","/*\n * Public API Surface of ngx-flow\n */\nexport * from './lib/button.directive';\nexport * from './lib/drop.directive';\nexport * from './lib/src.directive';\nexport * from './lib/flow.directive';\nexport * from './lib/upload-state';\nexport * from './lib/transfer';\nexport * from './lib/flow-injection-token';\nexport * from './lib/ngx-flow.module';\nexport * from './lib/flow-constructor';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}